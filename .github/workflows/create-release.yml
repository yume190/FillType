name: Create Release

# Create XCFramework when a version is tagged
on: 
  push:
    tags: "*"
    paths:
      - 'Source/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'
  pull_request:
    paths:
      - 'Source/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'

jobs:
  create_release:
    name: Create Release
    runs-on: macOS-11
    steps:

      - uses: actions/checkout@v2
      
      # https://github.community/t/how-to-get-just-the-tag-name/16241/6
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      
      - name: SPM Cache ${{ matrix.xcode }}
        uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-${{ matrix.xcode }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.xcode }}-spm-
      
      - name: Mint Cache
        uses: actions/cache@v2
        with:
          path: ~/.mint
          key: ${{ runner.os }}-${{ matrix.xcode }}-mint
          restore-keys: |
            ${{ runner.os }}-${{ matrix.xcode }}-mint-
      
      - name: Install mint
        run: brew install mint
        
      - name: Install Create xcframework(SPM)
        run: mint install unsignedapps/swift-create-xcframework
        
      - name: Create xcframework
        run: ~/.mint/bin/swift-create-xcframework --stack-evolution
        
      - name: Clear Create xcframework
        run: rm -Rf .build/swift-create-xcframework

      - name: Zip xcframework
        run: zip -r TypeFillKit.xcframework.zip TypeFillKit.xcframework

      - name: Upload release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.get_version.outputs.VERSION }}
          prerelease: false
          title: "Release Build"
          files: |
            TypeFillKit.xcframework.zip
