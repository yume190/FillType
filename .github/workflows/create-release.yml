name: Create Release

# Create XCFramework when a version is tagged
on: 
  push:
    tags: "release-*"
    paths:
      - 'Source/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'
  pull_request:
    paths:
      - 'Source/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'

jobs:
  create_release:
    name: Create Release
    runs-on: macOS-11
    steps:

      - uses: actions/checkout@v2
      
      # https://github.community/t/how-to-get-just-the-tag-name/16241/6
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::`echo ${{ steps.get_tag.outputs.VERSION }} | sed -En 's|release-||p'`
      
      - name: SPM Cache ${{ matrix.xcode }}
        uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Mint Cache
        uses: actions/cache@v2
        with:
          path: ~/.mint
          key: ${{ runner.os }}-mint-${{ hashFiles('~/.mint/**/metadata.json') }}
          restore-keys: |
            ${{ runner.os }}-mint-
      
      - name: Install mint
        run: brew install mint
        
      - name: Install Create xcframework(SPM)
        run: mint install unsignedapps/swift-create-xcframework
        
      - name: Create xcframework
        run: ~/.mint/bin/swift-create-xcframework --stack-evolution
        
      - name: Clear Create xcframework
        run: rm -Rf .build/swift-create-xcframework

      - name: Zip xcframework
        run: zip -r TypeFillKit.zip TypeFillKit.xcframework

      - name: Commit xcframework
        run: |
          git config --global user.name 'yume190'
          git config --global user.email 'yume190@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          sed -i '' 's|\(let checksum = "\)\(.*\)\("\)|\1`swift package compute-checksum TypeFillKit.zip`\3|' Package.swift
          sed -i '' 's|\(let binaryURL = "\)\(.*\)\("\)|\1https://github.com/yume190/TypeFill/releases/download/${{ steps.get_version.outputs.VERSION }}/TypeFillKit.xcframework.zip\3|' Package.swift
          git add Package.swift
          git commit -m "Automated release"
          git push

      - name: Upload release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.get_version.outputs.VERSION }}
          prerelease: false
          title: "Release Build"
          files: |
            TypeFillKit.zip
